Прочитать чистый код
java code conv (!!!) не писать лонг через маленькую l
операции над примитивными типами
приоритет операций - будет на тесте
ряд расширяющих преобразований
byte -> short -> int -> long -> float -> double
как сравнить два double
к макс byte добавить 1

сужающее преобразование (потеря точности и искажение возможно)
проверить примеры

компилировать из любого каталога
разобраться с кодом

ДЗ
==========================================
на основе кода принять Hello проверить, прорка должна быть отд. метод. если hello - отправить на модель, тоже самое с java
создать предложение hello пробел java
введите hello
введите java

если правильно out -> hello java
все по MVC
================

Idea community - Spring?

презентация
лекция
доп литература

как получить idea ultimate

MVC

user

1) View
2) Controller (проверка данных на правильность и целостность)
2) Model (бизнес логика)
3) ORM + DB

некорректные данные - худший случай

main не суперкласс - перелача управления в контроллер

никаких строк в модели и контроллере
sysout кроме view нигде
отладка только через тесты




байтовая маска - гугл

===============================
2.


системы счисления шестн, 8ричная (до16)
с 2й - в 8чную, в 16чную и обратно
умение сформулировать свои мысли кратно и по теме - собес

Массивы

new выделяет память
no hardcode

рефакторинг - улучшение читаемости кода

математика

guide for technical development

!!mathematics for cs

за операции с нулем отдельный сопроцессор - быстрей
обход элементой с конца массива быстрей

mockup

CI CD

JUnit4

notepad -> ide

сортировка пузырьком и вообще сортировки

что нужно для собеза

алгоритмы и структуры данных книги, лекториум

порядок возрастания сложности
программа минимально сложности

изобразить сортировку

пр_мас_сокр в блокноте


*******************************************************************************************

String, StringBuilder, StringBuffer

null - специальное значение, на которое может ссылаться любая ссылка

какой GOF pattern в стринг пуле

        String s1 = "123";
        String s2 = "12" + "3"; //прекомпиляция преобразует в "123"
        System.out.println(s1 == s2); //true

split()
trim()

лексикографический порядок - ??

поиграться со сравнением строк через compareTo

как работает StringBuilder??
буферная память (1,5 размера текста + 1)

при уменьшении текста в буфере, буфер не будет автоматом уменьшаться, нужно вызывать для этого trimToSize()

patter + compite - от 3х и выше раз сравнения

оракл - регекс
=========================== задание
все даннык собрать, потом на модель


проверить кеширование Integer


google рекомендации по коммитам

**********************************************************************************************

ООП - парадигма программирования - все объекты

smus sergey

c введением ооп код лучше отражает взаимодействие объектов реального мира с необходимой долей детализации
геттеры и сеттеры не тестят

энкапсуляция - сокрытие данных для возможности дальнейшего изменения в будущем

выделение базового класса, на его базе создание иерархии классов
Полиморфизм - возможность вызывать методы наследников используя ссылку базового класса 
определение алгоритма
createChildClass -> создать классы
научиться создавать объекты

проверки
валидация данных - в контроллере, все что относится к бл - в модели

минус ооп - потеря особенностей наследника при полиморфизме
опреление массива

parent -> child
       -> child -> grandchild
			
			 Inc
			 Ext
	   OL OverR P Generics
			 Abst
			 
samle

прописать encoding - UTF-8
блинов - java интернационализация строк

file -> new -> resource bundle
properties - регулярки
!!! Task!			 


**********************************************************************************************

class Object

вершина иерархии
может указываеть на любой объект
===================
проверить что будет если не переопределить toString() в объекте
===================

oracle - много фантомных расчитных алгоритмов
hashcode вычисляется в фоне, потому по нему сравнивать быстрей чем вызывать equals 

хэш - (первый элемент + второй * простое число + b) * ПЧ + С

СБ контракт между equals hash - должны считаться по одним и тем же параметрам

!! соглашение по equals 

id не брать что-то внешнее в качестве


написать equals по данным полям --- запомнить
сравнине с собой, с нулом, соравнение по типу (instanceof, если нужны наследники, если нет то getClass) -> поэлементрное сравнение

поиграться с clone

почему cloneNotSupported
примеры на equals and hc and clone

СБ!!! immutable object - заучить "как создать immutable object" из презентации

ДЗ===================
создать immutable object и изменить рефлекшном

как сравнивать enum
ordidal

грузовые 

**********************************************************************************************

04.12.19

Философия исключений

что такое исключительная ситуация
есть основной алгоритм
возникновение ситуаций, которые приводят к нарушению выполнения данного алгоритма
любые возникающие события, которые не дают продолжать основную канву выполнения программы
любой try-catch ресурсоемок
любой отход от тз - ответственность
обозначить проблему по переписке
озвучить на созвоне, статус-встрече
задача разработчика - безбаговый код, который работает всегда и выполняет четко поставленную задачу
стоппер - исключительная ситуация в работе не по вине другого человека, когда нельзя продолжить работу
блоккер - ... по вине другого

для устрочивости в случае исключительной ситуации возвращают некоректные данные 
Throwable - единственный класс, который может остановить естественный порядок выполнения программы
для вставки записи в базу, не проверять наличие (в следующей же транзакции такая же запись может быть добавлена),
 а попытаться вставить и обработать исключение


в try - минимальное количество кода (try вызывает безопасный режим, который работает медленно)
если исключения можно разделить на несколько трай - разделить
недопускать возникновения одних и тех же исключений в разных местах в одном коде

!!!знать иерархию исключений
Error - после возникновения нельзя гарантировать сохранность данных и продолжать работу

finally обрабатывается всегда, кроме случаем убивающих Jvm или подвешивающих программу
в трай не return, не обрабатывать новые исключения
!! Closable, autoclosable ---посмотреть. 
autoclosable -- кто реализовует, тот и может использоваться в try-with-resources

несколько исключение в одном catch -- только одного уровня

на понедельник проработать эксепшны головачева (первые две ссылки в презентации) набрать код и выложить на гит
============
две крайности принятия решений
где ловить sql exception
====================
метод вводящий логин
взять готовый проект регистрационной формы

**********************************************************************************************
Classloader - коды методов + статики
сколько потоков - столько стеков
что такое null????

**********************************************************************************************

project feedback
не должно быть проверок в модели
for заменить на стримы
не не использовать double
в методе не должно быть создания объектов
stream

!!vertex сортировки
все проверки, валидации в контроллере -> в модели только бизнес логика
служебный метод всегда что-то принимает и что-то возвращает - тогда можно протестировать

**********************************************************************************************
11.12.19

хороший тон - работать на одном уровне абстракции

POJO. классы без поведения
в объекте только данные, конструктор, геттеры-сеттеры, equals, toString, builder

!!ПОРОЖДАЮШИЕ ПАТТЕРНЫ (Singleton)

вопрос по теории: определение + применение

при изменении методов в сложной иерархии можно поломать существующий функционал

Spring Boot initializer

правила разделения эмиссии

вместо иерархии сборки объектов

dependency injection
ооп - прежде чем что-то использовать, это что-то должно быть созданно

static и default методы в интерфейсах

все взаимодействия с объектами происходят через интерфейс

посмотреть rt2 - проверить дз

Objects.requireNonNull

lombok
видео в блоке 7
видео алишев Spring уроки 1-7

**********************************************************************************************

13.12.19

============================================================================================
создать в спринг приложении  entity user


переписать задание на экспепшн, проверка в модели
xml, аннотации разобраться

кислин

!!!!!!!!!!видео в блоке 7 на 12 минут по спрингу

посмотреть LocalData

разобрать пример с докторами

!!! переписать первую таску в стиле видео 7 (можно на спринге) через сборку
переписать розетку на 5 штук
blockj8 видео лямбда выражения
java 8 учебник vortex - прочитать! все ссылки в файле!!
дописать в анки внутренние классы

Создать юзера в спринг программе
презентация исключения

**********************************************************************************************

16.12.19

переписать view вместо instanceof через map filter 

!!!!ПАТТЕРНЫ
СТРУКТУРНЫЕ
ФАСАД, 


ДЗ ---- СТРИМЫ 

МАССИВ, лист - интстрим, стрим
2. pair

динамический массив имеет выиграш в производительности только если добавлять элемент в конец массива

в динамическом массиве есть буферная память. при заполнении свободного места массива на 75 %
создается новый массив с новым буфером
capacity - данные в массиве + свободное месте == 1.5 + 1
current logic size * 1.5 + 1
адрес массива в память + размер элемента * n - 1

поиск в хеш таблице
хештаблицу нельзя исп для долгосрочного хранения данных
в пределах одного метода


двоичное дерево - поиск по диапазону

хештаблицы и деревья двоичные применяются в индексировании баз данных
алгоритм балансировки красно-черное дерево


найти и выучить LocalDataTime
выучить новые методы для мап из java 8
разобраться пишем лист.док

выучить структуру листа (связанный и обычный) методы

*****************************************************************************************************************************

Сделать HashSet и TreeSet ------ общая внутренняя структура  на ПТ

Андрей Родионов	

неизвестные дженерики ютруб

иерархия коллекций - знать

Iterable -- Iterator
    |
Collections

разобраться с внутренней структорой Map

старый код покрывается тестами, пишется новый и доводится до состояния, чтобы проходить все тесты

как ведут себя коллекции с null

разобраться со структурами всех коллекций

абстрактные реализации интерфейсов коллекций

методы интерфейса коллекций

unsupportedOperationException 
Concurrent modification exception

sublist - подсписок связанный с изначальной коллекцией

задание в Написать коллекцию


Потоки ввода вывода
всегда должны закрываться - потенциальная утечка памяти

flush - записывается буффер

паттерн в BufferedReader
transient поля записываются значениями по умолчанию
RandomAccessFile

GrabDuck -- Spring на практике
lets code


********************************************************************************************************************
проект №10
Небольшой проект, законченный

1. Роли!!

Guest  -- login,  registration, main page
User -- logout, пополнить счет
Admin  -- logout, пополнить счет

аутентификация 

локализация - все роли, две колонки в базе
пересчет валюты

суперадмин окошко с правами

если роль ничем не отличается можно отменить

*******************************************************************************************************************
ДЗ сделать архитектуру проекта
расписать энтити (пройти 4 пункта)
посмотреть видео по авторизации graph duck - отдельный проект
регистрационная форма 6 - авторизация
JDBC для начинающих
javascript JSON
Postman

*******************************************************************************************************************
Отдельный таск

регистрационная форма 6  - регистрация пользователей
авторизация пользователей проверка (логин или пароль существует)
!! локализация (укр, англ) по кнопкам
заход на страницу данной роли

регистрация - вся инфа о пользователе сразу

авторизация - в примерах посмотреть rt6
получения юзера через optional

проверить пароль только если есть такой юзер

346782 - хабр

пароль хранить как хеш
bcript

запросы к базе максимальнно сложные

пейджинация 10 страниц

все что возможно делать в базе - делать в базе

взять js с rf6

hasher в самплах

autowired делать через конструктор

include file in html
angular + js

parent в pom.xml согласовывает версии зависимостей

СБ - виды spring конфигураций

Scope бинов


теория СУБД
id в спринге long

запрос должен делать как можно более обработанный данные
spring-jpa... ddl -update

timezone utl
локализация, авторизация!!!!!
темплейт html
************************************************************************************************************************
блок 1 регистрационная форма

каждый энедпоинт по ролям

no stacktrace on front (error handler)
не нарушать слои - (из контроллера напрямую в базу нельзя - через сервис)
https://habr.com/ru/post/346782/

контроллер через optional!

CБ - чем Map отличается от flatmap в стриме, в optional
GoF patterns на 8е число!

СБ -- CRUD!
идемпотенция методов
REST - не протокол, а стиль архитектуры (конвенция)
ID IoC
Scope bean
singleton
swagger

/admin/endpoint1
/user/endpoint1



один запрос на ендпоинт
нет досортировок вне базы - один запрос

дефолтный 

язык должен сохраняться при переключении страниц
админ, потом в другом браузере открываем юзера изменения у одного юзера не должны изменять состояние другого
не допускать двойного логина под одной учеткой из разных устройств - spring config
model
registrationDate
q7 спринг примеры

транзакции!!! разобраться

перенести всю логику в сервисы!!!
эксепшны из сервисов обрабатываем на контроллере

ERROR HANDLER
сервлеты css проблема
опшнал в сервисе
orElse -> optional

orelse -> ошибка
паджинация

SQL 

при нормализации кол-во информации увеличивается

!! 3 ФОРМЫ НОРМАЛИЗАЦИИ 

разобраться в схемах edr диаграммах

!!!индексы

рисовать формы в mysql workbench  -- ОСНОВНАЯ ЧАСТЬ ПРЕЗЕНТАЦИИ ДЛЯ ПРОЕКТА
 
SAMPLES -> DAO CARDB - код с rf2, заставить работать
используя rf2 + representative controller20170926 - прикрутить две части между собой - база и рег форма 

классичкский синглтон работает всегда

СБ! preparedStatement и Statement
создать базу данных в workbench диджитализация (канал)
все запросы sql в проперти
запустить cardb создать базу, запустить все запросы ---
повторить базу данных по ссылке из 
разобраться с уникальностью и сделать stackoverflow
using, on

транзакциия!!!

samples/dao/carAndDriver - разобраться 
org.apache.webapp - archetype
сервлеты - Блинов
DoctorDB

метод подготовки логики, транзакция отдельным методом
в транзакции только обращения 

паджинация, сортировка, фильтрация

spring q7

final project в гуглдрайве ссылка на гитхаб

каркас сервлетного проекта:
	1) уметь развернуть сервлет проект с нуля
	2) кодировки прописать везде где нужно (пом, фильтр)
	3) локализация (jsp или html на котором кнопки ukr, eng принять в сервлете - переключают локаль внутри программы (фильтр повторного нажатия) )
		отдельный проект 
		
	4) воспользоваться текущей локалью getLocale() ? - табличка 
				1) текущая локаль - название ячеек - оформление
				2) даты 
				3) деньги
				4) внутри таблицы переключатся данные из проперти или базы данных
				в спринге locale handler
				

	Авторизация, аунтефикация - логин пароль, фильтр ролей
	а) при авторизации загрузить соотвествующую данной роли центральную страницу (user page, admin page)
		со страницы логин - user/admin, обеспечить переходы по соотвествующим ссылкам для юзера\админа
		
		неправильная страница -контроль за ссылками
		
		все ссылки приходят в одно место
		построить структуру которая собирает ссылки и раскладывает по сервисам (паттерн команда)
		
немчинский JavaEE, jakartaEE

		GD - samples, video
		
		сервлет
		роль в сессии сравнивается с ролью на странице
		контекст - общая область памяти для всех пользователей  - (список пользователей)
		на новую сессию не пускать
		
		
на аннотациях в сервлетах не нужен web-inf
все в webapp доступно без запуска сервлета

samples/webapp04 + coffeeMachine

уметь запускать jar руками 
jsp user, admin в отдельных каталогах

forward добавляет к существующему пути
обработка страницы и путь обрабатывается отдельно

ДЗ изменить путь в coffee/login -> admin/adminbasic.jsp


аутентификация - authFilter - проверка на соответствие пути запроса и роли в сессии

logout 
1. стираем пользователя в контексте
2. стираем роль в сессии
3. редирект на index.jsp

session/timeout -> session listener -> sessionDestroyed

посмотреть studentDB ( в том числе взять коннекшн пулл)

/user/main_user.jsp
/admin/main_user.jsp

логаут стрелка назад - выгрузить из сессии


собесед парсеры xml

footer
антонюк епам

презентация 5 минут - макс
на понедельник

защита:

презентация
показать что проект работает
провести подготовленную демонстрацию (возможные конфликты, нестандартные ситуации и т.п.)

неточности
визуализация на бумаге

презентация должна быть
язык укр
1 лист фамилия имя тренер
2 вариант + название + задание (из файла)
3 общие требования к проекту
4. используемые технологии спринг
5. используемые технологии сервлеты
6. диаграмма базы данных - основные вопросы



========================
GRASP SOLID STUPID


FAULER - REFACTORING

ADD REGEX TO FIELDS

rest, bean scope, 
что если синглтон будет будет имплементировать в себе прототайп
стримы - расскажите методику как в стримах считает среднее арифметическое
		методы функциональные, лямбды, 
		
low coupling - grasp, solid
gof - делегат, прокси - в чем разница
statement, prepared statement, join, нормальные формы, денормализация, aсid - изолирование
многопоточность, volitile
стандартные интерфейсы в коллекциях
equals - instanceof - getClass


на 29.01 - видео в 12 блоке. acid, уровни изоляции

jsp - транзакция организованная вручную
autocommint - false
роль в сессии

fullname - разбить

!!!!!coffeeMachine

общая страница у каждого своя - на общий индекс только после разлогирования
незалогенный юзер не должен видеть страницы гостя

29.01.2020


MULTITHREADING

монитор после синнхит

try {
connections
} catch (rollback) 
commit


ненужный круд помечаем, но не реализации
на обрыв к базе показывать база не доступна


map list -> key value<key, value> = key + key

ValeriaFatova
@valeria.fatova

фронт

ТЕСТЫ!!!!!!!!!!!!!!!!!!!!!!
- javaEE


выделить
id пароль нельзя на фронт - брать ДТО.
конвертеры дто отдельно от сервисов.

вынести calculate norm!
2-3 сервиса 

!ридми - university2019 valeriafatova

1. описание

2. требования к установленым

устрановка
скрипт для установки бд, и минимальный набор тестовых данных популяция
connection pool - как запустить - xml в метаинф или в самом томкате или jndi
tomcat 7 plugin мавен

запустить проект с комьюнити
добавить gitignore в репо
презентовать в мастере
JCC
скрпты сйл в ресурасах
убрать LOG

имена или single (better) or plural

dto in web
persistance
exception - dв пакет exceptions
enum - если в одном месте - не выносить из пакета, иначе - отдельный пакет

разделяем логику и состояние
константы в вложеных в класах, все что меняется - в проперти
конекшн врапер

автоформат

сервис не получает реквест респонс, выгружаем необходимое и передаем параметры.
SOLID

ИНТЕРФЕЙСЫ НА ДАО И НА СЕРВИСЫ
ВСЕ ЗАВИСИМОСТИ ЧЕРЕЗ ИНТЕРФЕРСЫ

КОММИТ СО ВСЕМИ ФИКСАМИ

ВМЕСТО IMPL -> DEFAULT

ОТФОРМАТИРОВАТЬ ИМПОРТЫ
ВАЛИДАЦАЯ В КОНТРОЛЛЕРЕ - ОТДЕЛЬНЫЙ МЕТОДЕ

1 task - 1 pull request = 1 ... squash -> i rebase

разбить проект на таски и пулл реквест на каждую

max 10-15 файлов

контроллер не разбивать на много классов (не более 15-20 методов

web separate package

one object - one dto

ctrl + alt + c - separate constant

реализовать все круд операциии
до 7 сущостей можно *

вынести билдеры из энтити

сделать дао солид

не хранить в сессии роль - ложить обрезанного юзера

сет в атрибут - в переменную

ДТО через фасад - прослойка

get never does post's work
get never modifies

context.getServletContext();
обрезаный пользователь в контексте
session.invalidate();

session.listener

login -> event -> listener (add user to context)